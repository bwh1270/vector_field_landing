<launch>
    <!-- ARGS -->
    <arg name="ros_pkg" default="vector_field_landing"/>
    <arg name="visualize" default="false"/>
    <arg name="debug" default="false" />

    <arg name="world_frame" default="map" />
    <arg name="uav_frame" default="base_link" />
    <arg name="camera_frame" default="camera_link" />
    <arg name="camera_name" default="/camera" />
    <arg name="image_topic" default="/image_raw" />

    <arg name="vehicle" default="typhoon_h480"/>
    <!-- <arg name="world" default="$(find aims_als)/worlds/multi_apriltags.world"/>  -->
    <arg name="world" default="$(find aims_als)/worlds/ground_platform.world"/> 
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
	<arg name="gcs_url" default="" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />
	<arg name="fcu_protocol" default="v2.0" />
	<arg name="respawn_mavros" default="false" />


    <!-- MAVROS -->
    <include file="$(find mavros)/launch/node.launch">
        <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
        <arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />
        <!-- GCS link is provided by SITL -->
        <arg name="fcu_url" value="$(arg fcu_url)" />
        <arg name="gcs_url" value="$(arg gcs_url)" />
        <arg name="tgt_system" value="$(arg tgt_system)" />
        <arg name="tgt_component" value="$(arg tgt_component)" />
        <arg name="log_output" value="$(arg log_output)" />
        <arg name="fcu_protocol" value="$(arg fcu_protocol)" />
        <arg name="respawn_mavros" default="$(arg respawn_mavros)" />
    </include>


    <!-- PX4 -->
    <include file="$(find px4)/launch/posix_sitl.launch">
        <arg name="vehicle" value="$(arg vehicle)"/>
        <arg name="world" value="$(arg world)"/>
    </include>


    <!-- UGV -->
	
    <!-- URDF Model will be sent to parameter server -->
	<!-- <param name="robot_description" textfile="$(find aims_als)/urdf/ugv_apriltags.urdf"/> -->
    <param name="robot_description" textfile="$(find aims_als)/urdf/ground_platform.urdf"/> 
    
	<!-- execute aimsUGV model from param server with robot_description to gazebo -->
	<arg name="x_ugv" default="-2"/>
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen" args="-param robot_description -urdf -model ugv_apriltags -x $(arg x_ugv)"/> -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen" args="-param robot_description -urdf -model ground_platform -x $(arg x_ugv)" />
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>

    <!-- <node name="spawn_fractal_marker" pkg="gazebo_ros" type="spawn_model" args="-file $(find aims_als)/models/FRACTAL_4L_6/model.sdf -sdf -model FRACTAL_4L_6 -x $(arg x_ugv)" output="screen"/> -->


<!-- PERCEPTION -->
    <!-- Gimbaled Camera -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="static_transform_pub" args="0 0 -0.1 -1.5708 0 3.14159 base_link camera_link" /> -->

    <!-- AprilTag ROS Package -->
    <!-- <arg name="launch_prefix" default="" /> 
    <arg name="node_namespace" default="apriltag_node" /> -->
    
    <!-- <rosparam command="load" file="$(find aims_als)/config/settings.yaml" ns="$(arg node_namespace)" />
    <rosparam command="load" file="$(find aims_als)/config/tags.yaml" ns="$(arg node_namespace)" /> -->

    <!-- <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" > -->
		<!-- Remap topics from those used in code to those on the ROS network -->
		<!-- <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
		<remap from="camera_info" to="$(arg camera_name)/camera_info" />
		<param name="cam_frame" type="str" value="$(arg camera_frame)" />
		<param name="publish_tag_detections_image" type="bool" value="$(arg visualize)" />
	</node> -->

    <!-- Republishing tag_detections -->
    <!-- <node pkg="$(arg ros_pkg)" name="tag_repub_node" type="tag_repub_exe" output="screen">
        <param name="big_tag_id" value="2"/> 
        <param name="small_tag_id" value="4"/>
    </node> -->

    <!-- Publishing Transformed Pose Data -->
    <!-- <node pkg="$(arg ros_pkg)" name="tag_tf_node" type="tag_tf_exe" output="screen">
        <param name="world_frame" type="str" value="$(arg world_frame)" />
        <param name="uav_frame" type="str" value="$(arg uav_frame)" />
        <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    </node> -->

    <!-- Estimation Transformed Pose of Tag on the Ground Vehicle -->
    <!-- <node pkg="$(arg ros_pkg)" name="tag_esti_node" type="tag_esti_exe" output="screen">
        <param name="sample_time" value="1/30" />
        <param name="initial_state_uncertainty" value="500" />
        <param name="model_acc_uncertainty" value="1" />
        <param name="meas_uncertainty" value="0.0004" />
    </node> -->

</launch>
